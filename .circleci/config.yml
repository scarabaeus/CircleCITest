version: 2.1
orbs:
  slack: circleci/slack@3.4.0

jobs:
  build:
    docker:
      - image: circleci/node:7.10
    steps:
      - checkout
      - run: echo "Run Build"

  test:
    docker:
      - image: circleci/node:7.10
    steps:
      - run: 
          name: "Setup custom environment variables"
          command: |
            echo 'export DEPLOYMENT_BUNDLE_NAME="${CIRCLE_PROJECT_REPONAME}-${CIRCLE_BRANCH}.${CIRCLE_BUILD_NUM}.${CIRCLE_SHA1}.tar.gz"' >> $BASH_ENV
      - slack/notify:
          channel: 'returns-deployment'
          color: '#bada55'
          title: ':package: Returns Front End deployment package created - #${CIRCLE_BUILD_NUM}'
          title_link: '${CIRCLE_COMPARE_URL}'
          message: '*Repo:* \`${CIRCLE_PROJECT_REPONAME}\` - *Branch:* \`${CIRCLE_BRANCH}\` - *Initiator:* \`${CIRCLE_USERNAME}\`'
          footer: 'To deploy: \`git tag ${CIRCLE_SHA1} <environment>\`'
          webhook: '${SLACK_WEBHOOK}'
          include_project_field: false
          include_job_number_field: false


  retrieve_package:
    docker:
      - image: circleci/node:7.10
    steps:
      - run: echo "Run Retrieve"
  
  qa_deploy:
    docker:
      - image: circleci/node:7.10
    steps:
      - slack/notify:
          channel: 'returns-deployment'
          color: '#ffffff'
          title: ':white_circle: Returns Front End QA deployment initiated - #${CIRCLE_BUILD_NUM}'
          message: '*Initiator:* ${CIRCLE_USERNAME} - *Tag:* ${CIRCLE_TAG}'
          webhook: '${SLACK_WEBHOOK}'
          include_project_field: false
          include_job_number_field: false
      - run: 
          name: "Setup custom environment variables"
          command: |
            echo 'export DEPLOYMENT_BUNDLE_NAME="${CIRCLE_PROJECT_REPONAME}-${CIRCLE_BRANCH}.${CIRCLE_BUILD_NUM}.${CIRCLE_SHA1}.zip"' >> $BASH_ENV
      - run:
          name: "My Deployment Output"
          command: echo ${CIRCLE_BRANCH}
      - run:
          name: "Deployment Bundle"
          command: echo ${DEPLOYMENT_BUNDLE_NAME}
      - slack/notify:
          channel: 'returns-deployment'
          color: '#ffffff'
          title: ':white_circle: Returns Front End deployed to *QA* - #${CIRCLE_BUILD_NUM}'
          title_link: '${CIRCLE_COMPARE_URL}'
          message: '*Branch:* ${CIRCLE_BRANCH} - *Initiator:* ${CIRCLE_USERNAME} ${CIRCLE_PULL_REQUEST}'
          webhook: '${SLACK_WEBHOOK}'
          include_project_field: false
          include_job_number_field: false

  stage_deploy:
    docker:
      - image: circleci/node:7.10
    steps:
      - slack/notify:
          channel: 'returns-deployment'
          color: '#0000ff'
          title: ':blue_circle: Returns Front End STAGING deployment initiated - #${CIRCLE_BUILD_NUM}'
          message: '*Initiator:* ${CIRCLE_USERNAME} - *Tag:* ${CIRCLE_TAG}'
          webhook: '${SLACK_WEBHOOK}'
          include_project_field: false
          include_job_number_field: false
      - run: 
          name: "Setup custom environment variables"
          command: |
            echo 'export DEPLOYMENT_BUNDLE_NAME="${CIRCLE_PROJECT_REPONAME}-${CIRCLE_BRANCH}.${CIRCLE_BUILD_NUM}.${CIRCLE_SHA1}.zip"' >> $BASH_ENV
      - run:
          name: "My Deployment Output"
          command: echo ${CIRCLE_BRANCH}
      - run:
          name: "Deployment Bundle"
          command: echo ${DEPLOYMENT_BUNDLE_NAME}
      - slack/notify:
          channel: 'returns-deployment'
          color: '#0000ff'
          title: ':large_blue_circle: Returns Front End deployed to *STAGING* - #${CIRCLE_BUILD_NUM}'
          title_link: '${CIRCLE_COMPARE_URL}'
          message: '*Branch:* ${CIRCLE_BRANCH} - *Initiator:* ${CIRCLE_USERNAME} ${CIRCLE_PULL_REQUEST}'
          webhook: '${SLACK_WEBHOOK}'
          include_project_field: false
          include_job_number_field: false

  request_prod_deploy_approval:
    docker:
      - image: circleci/node:7.10
    steps:
      - run:
          name: "My Deployment Output"
          command: echo ${CIRCLE_BRANCH}
      - slack/approval:
          title: ":red_circle: Returns Front End PRODUCTION approval required - #${CIRCLE_BUILD_NUM}"
          message: '*Branch:* ${CIRCLE_BRANCH} - *Tag:* \`${CIRCLE_TAG}\` - *Initiator:* \`${CIRCLE_USERNAME}\`'
          url: 'https://circleci.com/workflow-run/${CIRCLE_WORKFLOW_ID}'
          #mentions: "ankush.goyal,jin.chen,"
          color: "#ff0000"
          webhook: '${SLACK_WEBHOOK}'

  prod_deploy:
    docker:
      - image: circleci/node:7.10
    steps:
      - slack/notify:
          channel: 'returns-deployment'
          color: '#ff0000'
          title: ':red_circle: Returns Front End PRODUCTION deployment initiated'
          message: '*Initiator:* ${CIRCLE_USERNAME} - *Tag:* ${CIRCLE_TAG}'
          webhook: '${SLACK_WEBHOOK}'
          include_project_field: false
          include_job_number_field: false
      - run: 
          name: "Setup custom environment variables"
          command: |
            echo 'export DEPLOYMENT_BUNDLE_NAME="${CIRCLE_PROJECT_REPONAME}-${CIRCLE_BRANCH}.${CIRCLE_BUILD_NUM}.${CIRCLE_SHA1}.zip"' >> $BASH_ENV
      - run:
          name: "My Deployment Output"
          command: echo ${CIRCLE_BRANCH}
      - run:
          name: "Deployment Bundle"
          command: echo ${DEPLOYMENT_BUNDLE_NAME}
      - slack/notify:
          channel: 'returns-deployment'
          color: '#ff0000'
          title: ':red_circle: Returns Front End deployed to PRODUCTION'
          message: '*Initiator:* ${CIRCLE_USERNAME}'
          footer: 'Not really...  this is just a workflow test.'
          webhook: '${SLACK_WEBHOOK}'
          include_project_field: false
          include_job_number_field: false
      
workflows:
  version: 2
  CircleCITest_CI_Build:
    jobs:
      - build
      - test:
          requires: 
            - build

  CircleCITest_Deploy_Prod:
    jobs:
      - slack/approval-notification:
          message: '*Branch:* ${CIRCLE_BRANCH} - *Tag:* \`${CIRCLE_TAG}\` - *Initiator:* \`${CIRCLE_USERNAME}\`'
          url: 'https://circleci.com/workflow-run/${CIRCLE_WORKFLOW_ID}'
          color: "#ff0000"
          webhook: '${SLACK_WEBHOOK}'
      - prod_deploy:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^deploy-production-.*$/
      
  CircleCITest_Deploy_Stage:
    jobs:
      - stage_deploy:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^deploy-stage-.*$/

  CircleCITest_Deploy_QA:
    jobs:
      - qa_deploy:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^deploy-(qa01|qa02)-.*$/

  

        

# version: 2
# jobs:
#   build:
#     docker:
#       - image: circleci/node:7.10
#     steps:
#       - checkout
#       - restore_cache:
#         - run: echo "Build Test"

#   deploy: 
#     filters:
#       tags:
#         only: /^\d+\.\d+\.\d+$/
#     steps:
#       - run: echo "Deploy Test"

# workflows:
#   version: 2
#   CircleCITest_build:
#     jobs:
#       - build
  # CircleCITest_deploy:
  #   filters:
  #     branches:
  #       ignore: /.*/
  #     tags:
  #       only: /^\d+\.\d+\.\d+$/
  #   jobs:
  #      - deploy
